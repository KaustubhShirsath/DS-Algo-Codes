#include<bits/stdc++.h>
using namespace std;
#define int long long
signed main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    int n, sum = 0;
    cin>>n;
    int arr[n];
    for(int i = 0; i < n; i++){
        cin>>arr[i];
        sum += arr[i];
    } 
    int dp[n+1][n+1][2];  // vals of X
    for(int i = 0; i < n; i++){
        dp[i][i][0] = arr[i];
        dp[i][i][1] = 0;
    }
    
    //order of evaluation is increasing order of length, as R-L is fixed in both transitions
    for(int len = 1; len < n; len++){
        for(int l = 0; l + len < n; l++){
            int r = l + len;
            dp[l][r][0] = max(arr[l] + dp[l+1][r][1], arr[r] + dp[l][r-1][1]);
            dp[l][r][1] = min(dp[l+1][r][0], dp[l][r-1][0]);
        }
    }
    cout<<2*dp[0][n-1][0]-sum<<endl;
}