// Find total number of triplets which give sum equals to target// in an array of n numbers which may contain duplicates,#include<bits/stdc++.h>using namespace std;void solve(){	int n,target;	cin>>n>>target;	int arr[n];	for(int i=0;i<n;i++){		cin>>arr[i];	}	sort(arr,arr+n);	int cnt = 0;	for(int j=0;j<n;j++){		int i = 0;		int k = n-1;		while(i<j&&j<k){			if(arr[i]+arr[j]+arr[k]==target){ // [1 3 3 5 5 7 7 7 8] T = 15				int itemp = i;					//		^				int ktemp = k;				while(itemp<j&&arr[itemp]==arr[i]){					itemp++;				}				while(ktemp>j&&arr[ktemp]==arr[k]){					ktemp--;				}				cnt+= (itemp-i)*(k-ktemp);				i = itemp;				k = ktemp;			}else if(arr[i]+arr[j]+arr[k]<target){				i++;			}else{				k--;			}		}	}	cout<<cnt<<endl;}	signed main(){	ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);	//int _t;cin>>_t;while(_t--)	solve();}