#include<bits/stdc++.h>
using namespace std;
// array = 1 3 4 5 2 9 6 8 2
int n;
void pr(vector<int>& a, vector<int>& pos, vector<int>& ans){
    cout<<"Size of LIS = "<<ans.size()<<endl;
    cout<<"arr = ";
    for(int x: a) cout<<x<<" ";
    cout<<endl;
    cout<<"mid = ";
    for(int x: pos) cout<<x<<" ";
    cout<<endl;
    cout<<"ans = ";
    for(int x: ans) cout<<x<<" ";
}
void n2dp(vector<int>& a){
    vector<int> dp(n);
    for(int i = 0; i < n; i++) cin>>a[i];
    dp[0] = 1;
    for(int i = 1; i < n; i++){
        dp[i] = 1;
        for(int j = 0; j < i; j++){
            if(a[i] > a[j] && dp[i] < dp[j] + 1)
                dp[i] = dp[j] + 1;
        }
    }
    int size = *max_element(dp.begin(), dp.end());
    vector<int> ans(size);
    int l = size;
    for(int i = n-1; i >= 0; i--){
        if(dp[i] == l){
            ans[l-1] = a[i];
            l--;
        }
    }
    pr(a, dp, ans);
}

void nlogn(vector<int> & a){
    vector<int> temp, pos, ans;
    for(int v: a){
        if(temp.empty() || v > temp.back()){
            pos.push_back(temp.size());
            temp.push_back(v);
        }
        else{
            auto it = lower_bound(temp.begin(), temp.end(), v);
            pos.push_back(it - temp.begin());
            *it = v;
        }
    }
    int j = temp.size()-1;
    for(int i = n-1; i >= 0; i--){
        if(pos[i] == j){
            ans.push_back(a[i]);
            j--;
        }
    }
    reverse(ans.begin(), ans.end());
    pr(a,pos,ans);
}

signed main(){
    cin>>n;
    vector<int> a(n);
    for(int i = 0; i < n; i++) cin>>a[i];
    cout<<"Nlog(N) sol = "<<endl;
    nlogn(a);
    cout<<endl<<endl;
    cout<<"N2 DP sol = "<<endl;
    n2dp(a);
}

