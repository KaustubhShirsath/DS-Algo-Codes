#include<bits/stdc++.h>
using namespace std;

int n;
vector<int> g[100100];

int sz[100100];
int ans[100100];
int rootval = 0;

void indfs(int node,int par,int h){
    sz[node] = 1;
    rootval += h;
    for(auto v:g[node]){
        if(v!=par){
            indfs(v,node,h+1); 
            sz[node] += sz[v];
        }
    }
}

void ansdfs(int node,int par,int parans){
    if(node==1){
        ans[node] = rootval;
    }else{
        ans[node] = parans + n - 2*sz[node]; 
    }
    for(auto v:g[node]){
        if(v!=par){
            ansdfs(v,node,ans[node]);
        }
    }

}

void solve(){
    cin>>n;
    for(int i=0;i<n-1;i++){
        int a,b;
        cin>>a>>b;
        g[a].push_back(b);
        g[b].push_back(a);
    }
    indfs(1,0,0);
    ansdfs(1,0,0);
    for(int i=1;i<=n;i++){
        cout<<ans[i]<<" ";
    }
}    

signed main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    //int _t;cin>>_t;while(_t--)
    solve();
}
