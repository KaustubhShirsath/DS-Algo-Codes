#include<bits/stdc++.h>using namespace std;int n;int v[101];int dp[101][100001];int rec(int level,int left){    // pruning    if(left<0)return 0;    if(left==0)return 1;    // base case    if(level==n){        if(left==0){            return 1;        }else{            return 0;        }    }    // save check    if(dp[level][left]!=-1){        return dp[level][left];    }    // compute if not saved    int ans = (rec(level+1,left) | rec(level+1,left-v[level]));    // save and return    return dp[level][left] = ans;}void solve(){    memset(dp,-1,sizeof(dp));    cin>>n;    for(int i=0;i<n;i++){        cin>>v[i];    }    int q;    cin>>q;    while(q--){        int x;        cin>>x;        cout<<rec(0,x)<<endl;    }}    signed main(){    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);    //int _t;cin>>_t;while(_t--)    solve();}