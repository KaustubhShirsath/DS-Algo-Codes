#include<bits/stdc++.h>
using namespace std;
vector<vector<int>> dp;
string X, Y;

string LCS(int m, int n){
    if(m == 0 || n == 0) return string("");
    if(X[m - 1] == Y[n - 1]) return LCS(m - 1, n - 1) + X[m - 1];
    if(dp[m - 1][n] > dp[m][n - 1]) return LCS(m - 1, n);
    else return LCS(m, n - 1);
}

void LCSLength(int m, int n){
    for (int i = 1; i <= m; i++)
        for (int j = 1; j <= n; j++){
            if (X[i - 1] == Y[j - 1]) dp[i][j] = dp[i - 1][j - 1] + 1;
            else dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]);
        }
}
 
int main(){
    cin>>X>>Y;
    int m = X.length(), n = Y.length();
    dp.resize(m+1, vector<int>(n+1));
    LCSLength(m, n);
    cout<<LCS(m, n);
    return 0;
}