#include<bits/stdc++.h>
using namespace std;

int n;
int arr[100100];
vector<int> g[100100];

int dp[100100][2];

void indfs(int node,int par){
    dp[node][1] = arr[node];
    dp[node][0] = 0;
    for(auto v:g[node]){
        if(v!=par){
            indfs(v,node);
            dp[node][1] += dp[v][0];
            dp[node][0] += max(dp[v][0],dp[v][1]);
        }
    }
}

void solve(){
    cin>>n;
    for(int i=1;i<=n;i++){
        cin>>arr[i];
    }
    for(int i=0;i<n-1;i++){
        int a,b;
        cin>>a>>b;
        g[a].push_back(b);
        g[b].push_back(a);
    }
    indfs(1,0);
    cout<<max(dp[1][0],dp[1][1])<<endl;
}    

signed main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    //int _t;cin>>_t;while(_t--)
    solve();
}
